<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Boubou Fan Page</title>
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: 'Helvetica Neue', sans-serif; background-color: #fffafc; color: #1a1a1a; line-height: 1.6; }
    a { color: #b54878; text-decoration: none; }
    header.navbar { display: flex; justify-content: space-between; align-items: center; padding: 1rem 2rem; background: #f9f9f9; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
    header .logo { font-size: 1.8rem; font-weight: bold; }
    header nav ul { display: flex; gap: 1.5rem; list-style: none; }
    .hero { text-align: center; padding: 4rem 2rem; background: #ffe6f0; }
    .hero h1 { font-size: 3rem; }
    .gallery, .fan-gallery, .snake-game { padding: 2rem; }
    .image-grid, .fan-gallery-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; }
    .image-grid img, .fan-gallery-grid img { width: 100%; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
    .lists { padding: 2rem; }
    .lists ul, .lists ol { margin-left: 2rem; margin-bottom: 1rem; }
    .form-section { padding: 2rem; background-color: #fff3f8; }
    form { display: flex; flex-direction: column; gap: 1rem; }
    input[type="text"] { padding: 0.6rem; border: 1px solid #ccc; border-radius: 8px; }
    button { background-color: #b54878; color: white; padding: 0.8rem; border: none; border-radius: 8px; cursor: pointer; }
    .photo-card { background: #fff; padding: 1rem; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.05); }
    canvas { border: 2px solid #b54878; display: block; margin: 1rem auto; background: #fff; width: 800px; height: 800px; }
    .snake-game button { display: block; margin: 0 auto 1rem; }
    #score { text-align: center; font-size: 1.2rem; font-weight: bold; margin-bottom: 10px; }
  
    /* Merch */
    .cart-section button {
  background-color: #b54878;
  color: white;
  padding: 0.3rem 0.6rem;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-size: 1rem;
}
    .cart-section button:hover {
  background-color: #a03e67;
}
  
.cart-section {
  background: #fff0f6;
  border-radius: 16px;
  padding: 1.5rem;
  max-width: 600px;
  margin: 2rem auto;
  box-shadow: 0 4px 8px rgba(181, 72, 120, 0.1); 
  border: none;
}

.cart-section h3 {
  font-size: 1.8rem;
  text-align: center;
  color: #b54878;
  margin-bottom: 1rem;
}

#cartList li {
  background: #fff;
  border: 1px solid #f3c4d7;
  padding: 0.8rem 1rem;
  border-radius: 12px;
  margin-bottom: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  flex-wrap: nowwrap;
}

#cartList .item-actions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-shrink: 0; 
}

#cartList strong {
  font-size: 1.1rem;
  color: #b54878;
}

#cartList button {
  display: inline-flex; /* ‚Üê Modification importante */
  align-items: center;
  justify-content: center;
  min-width: 32px;
  height: 32px;
  background-color: #ffd6e7;
  color: #b54878;
  border: none;
  padding: 0.4rem 0.7rem;
  border-radius: 8px;
  cursor: pointer;
  font-weight: bold;
  transition: background-color 0.2s;
}

#cartList button[title="Supprimer"] {
  margin-left: 0.5rem; /* Nouveau style ajout√© */
}

#cartList button:hover {
  background-color: #f9bcd4;
}


#orderButton {
  text-align: center;
  display: block;
  margin: 1rem auto 0;
  padding: 0.8rem 1.5rem;
  background: linear-gradient(to right, #b54878, #d76e9b);
  color: white;
  font-size: 1.1rem;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  box-shadow: 0 4px 12px rgba(181, 72, 120, 0.2);
  transition: transform 0.2s;
}

#orderButton:hover {
  transform: scale(1.05);
}

.checkout-form {
  max-width: 600px;
  background-color: #fff6fa;
  border: 2px solid #eca4c9;
  border-radius: 20px;
  padding: 2rem;
  margin: 2rem auto;
  font-family: 'Arial Rounded MT Bold', sans-serif;
  box-shadow: 0 10px 20px rgba(181, 72, 120, 0.1);
}

.checkout-form h2 {
  color: #b54878;
  font-size: 2rem;
  text-align: center;
  margin-bottom: 1rem;
}

.checkout-form h3 {
  color: #b54878;
  margin-top: 2rem;
  font-size: 1.3rem;
}

.checkout-form .item,
.checkout-form .total {
  font-size: 1.1rem;
  margin: 0.3rem 0;
}

.checkout-form form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 1rem;
}

.checkout-form label {
  font-weight: bold;
  color: #7b1e48;
}

.checkout-form input,
.checkout-form textarea,
.checkout-form select {
  padding: 0.75rem 1rem;
  border: 1px solid #e3b5cb;
  border-radius: 12px;
  font-size: 1rem;
  background-color: #fff;
  transition: border 0.2s ease-in-out;
}

.checkout-form input:focus,
.checkout-form textarea:focus,
.checkout-form select:focus {
  outline: none;
  border: 2px solid #d45c8e;
}

.checkout-form button {
  margin-top: 1rem;
  padding: 1rem;
  background-color: #b54878;
  color: #fff;
  font-size: 1.1rem;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  transition: background-color 0.3s ease-in-out;
}

.checkout-form button:hover {
  background-color: #b54878;
}

section {
  padding: 3rem 2rem;
  margin-bottom: 3rem;
}
  
.back-home {
  display: inline-block;
  background-color: #ffd6e7;
  color: #b54878;
  padding: 0.8rem 1.5rem;
  border-radius: 50px;
  font-weight: bold;
  font-size: 1.1rem;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  transition: background 0.3s ease;
}

.back-home:hover {
  background-color: #f9bcd4;
}

body {
    font-family: 'Helvetica Neue', sans-serif;
    background-color: #f9f9f9;
    padding: 20px;
    color: #333;
  }

  .order-container {
    max-width: 700px;
    margin: 0 auto;
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }

  .order-container h2,
  .order-container h3 {
    margin-top: 0;
    font-weight: 600;
  }


.order-summary {
  max-width: 700px;
  margin: 0 auto;
  background-color: #fff;
  border-radius: 12px;
  padding: 30px;
  box-shadow: 0 0 15px rgba(0,0,0,0.05);
}

h2, h3 {
  margin-bottom: 20px;
  font-size: 24px;
  border-bottom: 1px solid #ddd;
  padding-bottom: 10px;
}

.cart-items-container {
  display: flex;
  flex-direction: column;
  gap: 15px;
  margin-bottom: 25px;
}

.cart-item-card {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f6f6f6;
  padding: 15px 20px;
  border-radius: 10px;
  border: 1px solid #e0e0e0;
}

.item-info {
  display: flex;
  flex-direction: column;
  font-size: 15px;
}

.item-name {
  font-weight: 600;
}

.item-price {
  font-weight: bold;
  font-size: 16px;
}

.total-box {
  background-color: #f1f1f1;
  border-radius: 10px;
  padding: 20px;
  font-size: 18px;
  font-weight: 600;
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
}

.order-form-section {
  margin-top: 30px;
}

#orderForm {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
}

#orderForm .form-group {
  display: flex;
  flex-direction: column;
  grid-column: span 1;
}

#orderForm .form-group.full {
  grid-column: span 2;
}

label {
  margin-bottom: 5px;
  font-size: 14px;
}

input, select {
  padding: 12px;
  font-size: 14px;
  border-radius: 8px;
  border: 1px solid #ccc;
  transition: border-color 0.3s ease;
}

input:focus, select:focus {
  border-color: #000;
  outline: none;
}

.confirm-button {
  grid-column: span 2;
  padding: 15px;
  font-size: 16px;
  background-color: #d99cc6;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  margin-top: 10px;
  transition: background-color 0.3s ease;
}

.confirm-button:hover {
  background-color: #c77bae;
}
  </style>
</head>

<body>
  <header class="navbar">
    <div class="logo">Boubou üíñ</div>
    <nav>
      <ul>
        <li><a href="#photos">Photos</a></li>
        <li><a href="#quizz">Quizz</a></li>
        <li><a href="#formulaire">Formulaire</a></li>
        <li><a href="#pending-gallery">En attente</a></li>
        <li><a href="#fan-gallery">Galerie fans</a></li>
        <!-- Merch -->
        <li><a href="#boubimerch">Merch</a></li>
        <li><a href="#snake">Jeu</a></li>
      </ul>
    </nav>
  </header>

  <main>
    <section class="hero">
      <h1>Bienvenue sur la Boubou Fan Page</h1>
      <p>Un espace 100% d√©di√© √† Boubou ü•∞</p>
    </section>

    <section id="photos" class="gallery">
      <h2>Photos de Boubou</h2>
      <div class="image-grid">
        <img src="young-boubou.png" alt="Jeune Boubou" />
        <img src="Young boubettos.JPG" alt="Boubettos style" />
      </div>
    </section>

    <!-- QUIZZ -->
    <section id="quizz" class="quizz-section" style="padding: 2rem;">
      <h2 style="text-align:center; margin-bottom: 1rem;">üéÄ BoubiQuizz üéÄ</h2>
      <div style="display: flex; gap: 2rem; flex-wrap: wrap; justify-content: center;">
        <div class="quiz-card" style="flex: 1; min-width: 250px; padding: 1rem; border: 2px solid #b54878; border-radius: 12px;">
          <h3 style="color:#b54878; margin-bottom: 1rem;">üíñ Qu'est-ce que Boubou aime le plus ?</h3>
          <button onclick="checkAnswer(this, 'faux')" style="margin-bottom: 0.5rem;">üéÆ Les jeux vid√©os</button><br>
          <button onclick="checkAnswer(this, 'faux')" style="margin-bottom: 0.5rem;">ü•Ω La VR</button><br>
          <button onclick="checkAnswer(this, 'vrai')">üì∫ Les animes</button>
          <p class="feedback" style="margin-top: 0.8rem; font-weight: bold;"></p>
        </div>
        <div class="quiz-card" style="flex: 1; min-width: 250px; padding: 1rem; border: 2px solid #b54878; border-radius: 12px;">
          <h3 style="color:#b54878; margin-bottom: 1rem;">ü´¢ Qu'est-ce que Boubou d√©teste le plus ?</h3>
          <button onclick="checkAnswer(this, 'faux')" style="margin-bottom: 0.5rem;">üßÑ L'ail</button><br>
          <button onclick="checkAnswer(this, 'faux')" style="margin-bottom: 0.5rem;">üïí Procrastiner</button><br>
          <button onclick="checkAnswer(this, 'vrai')">üßπ Le d√©sordre</button>
          <p class="feedback" style="margin-top: 0.8rem; font-weight: bold;"></p>
        </div>
      </div>
    </section>

    <section id="formulaire" class="form-section">
      <h2>Soumettre une photo de Boubou</h2>
      <form id="photoForm">
        <input type="text" id="photoURL" placeholder="Lien vers la photo" required />
        <button type="submit">Envoyer</button>
      </form>
    </section>

    <section id="pending-gallery" class="pending-gallery">
      <h2>Photos en attente</h2>
      <div class="pending-gallery-grid" id="pendingGallery"></div>
    </section>

    <section id="fan-gallery" class="fan-gallery">
      <h2>Galerie des fans</h2>
      <div class="fan-gallery-grid" id="fanGallery"></div>
    </section>

    <!--Merch-->
    <section id="boubimerch" class="gallery">
        <h2>üõçÔ∏è BoubiMerch</h2>
        <p style="text-align:center; margin-bottom: 1rem;">D√©couvrez les produits d√©riv√©s de l'univers de Boubou !</p>
        <div class="image-grid">
          <div class="photo-card">
            <img src="Boubou t-shirt.png" alt="Boubou T-shirt" />
            <h3 style="text-align:center;">Boubou T-shirt (Taille unique)</h3>
            <p style="text-align: center;"font-size: 1.8em; color: #333; margin-bottom: 1em;">20 ‚Ç¨</p>
            <button onclick="addToCart('Boubou T-shirt', 'Taille unique')"style="display: block; margin: 0 auto; padding: 0.8rem 1.5rem;">üõí Ajouter au panier</button>
          </div>
          <div class="photo-card">
            <img src="Boubettos pair of shoes.png" alt="Boubettos pair of shoes" />
            <h3 style="text-align:center;">Boubettos Pair of shoes</h3>
            <p style="text-align: center; font-size: 1em; color: #333; margin-bottom: 1em;">35‚Ç¨</p>
            
            <div style="display: flex; align-items: center; gap: 1rem; justify-content: center;">
                <div style="display: flex; align-items: center; gap: 0.5rem;">
                    <label for="shoeSize">Taille :</label>
                    <select id="shoeSize" style="padding: 0.5rem; border-radius: 6px; border: 1px solid #b54878;">
                        <!-- Options de taille -->
                        <script>
                            for (let i = 35; i <= 51; i++) {
                                document.write(`<option value="${i}">${i}</option>`);
                            }
                        </script>
                    </select>
                </div>
                <button onclick="addShoesToCart()" 
                        style="padding: 0.8rem 1.5rem;
                               background-color: #b54878;
                               color: white;
                               border: none;
                               border-radius: 8px;
                               cursor: pointer;">
                    üõí Ajouter au panier
                </button>
            </div>
        </div>
      
        <div class="cart-section">
          <h3>üß∫ Panier</h3>
          <ul id="cartList">
          </ul>
          <!-- Bouton Commander -->
          <button id="orderButton">üõçÔ∏è Commander</button>
        </div>

        
      </section>
  
    <section id="snake" class="snake-game">
        <h2>üéÆ Jouer au BoubiSnake</h2>
        <p id="score">Score : 0</p>
        <button onclick="startGame()">‚ñ∂Ô∏è Lancer le jeu</button>
        <canvas id="snakeCanvas" width="800" height="800"></canvas>
    </section>

    <div style="text-align: center; margin: 3rem 0;">
        <a href="#top" class="back-home">‚¨ÖÔ∏è Retour en haut</a>
    </div>
 </main>  


  <footer>
    <p>&copy; 2025 Boubou Fan Page ‚Äî <a href="https://www.instagram.com/lirbenjamin/" target="_blank">Instagram</a></p>
  </footer>

  <script>
    const form = document.getElementById("photoForm");
    const gallery = document.getElementById("fanGallery");
    const pendingGallery = document.getElementById("pendingGallery");

    let photos = JSON.parse(localStorage.getItem("fanPhotos")) || [];
    let pending = JSON.parse(localStorage.getItem("pendingPhotos")) || [];

    function saveAll() {
      localStorage.setItem("fanPhotos", JSON.stringify(photos));
      localStorage.setItem("pendingPhotos", JSON.stringify(pending));
    }

    function renderPhotos() {
      gallery.innerHTML = "";
      photos.forEach((photo, index) => {
        const card = document.createElement("div");
        card.className = "photo-card";
        const img = document.createElement("img");
        img.src = photo.url;
        img.alt = `Fan ${index + 1}`;
        card.appendChild(img);

        const likes = document.createElement("div");
        likes.className = "likes";
        likes.innerText = `${photo.likes || 0} like(s)`;
        card.appendChild(likes);

        const likeBtn = document.createElement("button");
        likeBtn.innerText = "‚ù§Ô∏è Liker";
        likeBtn.onclick = () => {
          photo.likes = (photo.likes || 0) + 1;
          saveAll();
          renderPhotos();
        };
        card.appendChild(likeBtn);

        const commentSection = document.createElement("div");
        commentSection.className = "comment-section";

        const commentInput = document.createElement("input");
        commentInput.type = "text";
        commentInput.placeholder = "Laissez un commentaire...";
        commentSection.appendChild(commentInput);

        const addCommentBtn = document.createElement("button");
        addCommentBtn.innerText = "Ajouter un commentaire";
        addCommentBtn.onclick = () => {
          const comment = commentInput.value.trim();
          if (comment) {
            photo.comments = photo.comments || [];
            photo.comments.push(comment);
            saveAll();
            renderPhotos();
          }
        };
        commentSection.appendChild(addCommentBtn);

        const commentList = document.createElement("div");
        commentList.className = "comments";
        if (photo.comments && photo.comments.length > 0) {
          photo.comments.forEach((comment) => {
            const commentItem = document.createElement("div");
            commentItem.className = "comment";
            commentItem.innerText = comment;
            commentList.appendChild(commentItem);
          });
        }

        commentSection.appendChild(commentList);
        card.appendChild(commentSection);
        gallery.appendChild(card);
      });
    }

    function renderPending() {
      pendingGallery.innerHTML = "";
      pending.forEach((photo, index) => {
        const card = document.createElement("div");
        card.className = "photo-card";
        const img = document.createElement("img");
        img.src = photo.url;
        img.alt = `En attente ${index + 1}`;
        card.appendChild(img);

        const acceptBtn = document.createElement("button");
        acceptBtn.innerText = "‚úÖ Valider";
        acceptBtn.onclick = () => {
          photos.push({ url: photo.url, likes: 0, comments: [] });
          pending.splice(index, 1);
          saveAll();
          renderPhotos();
          renderPending();
        };

        const rejectBtn = document.createElement("button");
        rejectBtn.innerText = "‚ùå Refuser";
        rejectBtn.onclick = () => {
          pending.splice(index, 1);
          saveAll();
          renderPending();
        };

        card.appendChild(acceptBtn);
        card.appendChild(rejectBtn);
        pendingGallery.appendChild(card);
      });
    }

    form.addEventListener("submit", (e) => {
      e.preventDefault();
      const url = document.getElementById("photoURL").value.trim();
      if (url) {
        pending.push({ url });
        saveAll();
        renderPending();
        form.reset();
      }
    });

    function checkAnswer(button, correct) {
      const parent = button.parentElement;
      const feedback = parent.querySelector(".feedback");
      if (correct === 'vrai') {
        feedback.innerText = "‚ú® Bonne r√©ponse ! Boubou est fier de toi üíñ";
        feedback.style.color = "#b54878";
      } else {
        feedback.innerText = "üò¢ Oups, ce n'√©tait pas √ßa ! Essaie encore !";
        feedback.style.color = "#999";
      }
    }

    renderPhotos();
    renderPending();

    // BoubiSnake Game
    const canvas = document.getElementById("snakeCanvas");
    const ctx = canvas.getContext("2d");
    const box = 40;
    let snake, food, direction, interval, score;

    const snakeImg = new Image();
    snakeImg.src = "boubette.png";

    const foodImg = new Image();
    foodImg.src = "boubou.jpeg";

    const eatSound = new Audio("eat.mp3");
    const deathSound = new Audio("gameover.mp3");

    function startGame() {
      snake = [{ x: 5 * box, y: 5 * box }];
      food = randomFood();
      direction = "RIGHT";
      score = 0;
      document.getElementById("score").innerText = "Score : 0";
      clearInterval(interval);
      interval = setInterval(draw, 150);
    }

    function randomFood() {
      return {
        x: Math.floor(Math.random() * (canvas.width / box)) * box,
        y: Math.floor(Math.random() * (canvas.height / box)) * box
      };
    }

    document.addEventListener("keydown", (e) => {
      if(["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(e.key)) e.preventDefault();
      if (e.key === "ArrowLeft" && direction !== "RIGHT") direction = "LEFT";
      if (e.key === "ArrowUp" && direction !== "DOWN") direction = "UP";
      if (e.key === "ArrowRight" && direction !== "LEFT") direction = "RIGHT";
      if (e.key === "ArrowDown" && direction !== "UP") direction = "DOWN";
    });

    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Snake
      for (let i = 0; i < snake.length; i++) {
        ctx.drawImage(snakeImg, snake[i].x, snake[i].y, box, box);
      }

      // Food
      ctx.drawImage(foodImg, food.x, food.y, box, box);

      let headX = snake[0].x;
      let headY = snake[0].y;
      if (direction === "LEFT") headX -= box;
      if (direction === "UP") headY -= box;
      if (direction === "RIGHT") headX += box;
      if (direction === "DOWN") headY += box;

      // Collision
      if (
        headX < 0 || headY < 0 ||
        headX >= canvas.width || headY >= canvas.height ||
        snake.slice(1).some(s => s.x === headX && s.y === headY)
      ) {
        deathSound.play();
        clearInterval(interval);
        alert("üíÄ Game Over ! Score : " + score);
        return;
      }

      if (headX === food.x && headY === food.y) {
        eatSound.play();
        food = randomFood();
        score++;
        document.getElementById("score").innerText = "Score : " + score;
      } else {
        snake.pop();
      }

      snake.unshift({ x: headX, y: headY });
    }


    const cart = [];

function addToCart(productName, size) {
  const existing = cart.find(item => item.name === productName && item.size === size);
  if (existing) {
    existing.quantity += 1;
  } else {
    cart.push({ name: productName, size, quantity: 1 });
  }
  renderCart();
}

function addShoesToCart() {
  const size = document.getElementById("shoeSize").value;
  addToCart("Boubettos Shoes", size);
}

function changeQuantity(index, delta) {
  cart[index].quantity += delta;
  if (cart[index].quantity <= 0) {
    cart.splice(index, 1);
  }
  renderCart();
}

function renderCart() {
  const cartList = document.getElementById("cartList");
  cartList.innerHTML = "";
  cart.forEach((item, index) => {
    const li = document.createElement("li");
    
    li.innerHTML = `
      <div class="item-info">
        <strong>${item.name}</strong> - Taille ${item.size}
      </div>
      <div class="item-actions">
        <button onclick="changeQuantity(${index}, -1)">‚ûñ</button>
        <span style="min-width: 30px; text-align: center">${item.quantity}</span>
        <button onclick="changeQuantity(${index}, 1)">‚ûï</button>
        <button onclick="changeQuantity(${index}, -${item.quantity})" title="Supprimer">üóëÔ∏è</button>
      </div>
    `;
    
    cartList.appendChild(li);
  });
}

// Fonction pour afficher un r√©capitulatif de la commande
document.getElementById("orderButton").addEventListener("click", function () {
  if (cart.length === 0) {
    alert("Votre panier est vide. Ajoutez des articles avant de commander.");
    return;
  }

  let totalAmount = 0;
  let itemsHTML = "";

  // On g√©n√®re le HTML de chaque article
  cart.forEach(item => {
    const price = item.name === "Boubou T-shirt" ? 20 : 35;
    const itemTotal = item.quantity * price;
    totalAmount += itemTotal;

    itemsHTML += `
      <div class="cart-item-card">
        <div class="item-info">
          <span class="item-name">${item.name}</span>
          <span class="item-size">Taille ${item.size}</span>
          <span class="item-quantity">x${item.quantity}</span>
        </div>
        <div class="item-price">${itemTotal}‚Ç¨</div>
      </div>
    `;
  });

  // On ins√®re d'abord le r√©capitulatif, puis le formulaire de livraison + bouton accueil
  const orderSummary = `
    <div class="order-summary-container" style="padding: 2rem; min-height:100vh;">
      <!-- Bouton Retour √† l'accueil -->
      <button 
        onclick="window.location.href='Test finale.html'" 
        style="
          display: block;
          margin-bottom: 2rem;
          padding: 0.8rem 1.5rem;
          background: #e0e0e0;
          color: #333;
          border: none;
          border-radius: 50px;
          font-weight: bold;
          cursor: pointer;
        ">
        ‚¨ÖÔ∏è Retour √† l'accueil
      </button>

      <div class="order-summary">
        <h2>üõí R√©capitulatif de votre Boubicommande</h2>
        <div class="cart-items-container">
          ${itemsHTML}
        </div>
        <div class="total-box">
          <span>Total :</span>
          <strong>${totalAmount}‚Ç¨</strong>
        </div>
      </div>

      <div class="order-form-section">
        <h3>üì¶ Informations de livraison</h3>
        <form id="orderForm">
          <div class="form-group full">
            <label for="email">Adresse e-mail</label>
            <input type="email" id="email" required />
          </div>
          <div class="form-group">
            <label for="firstname">Pr√©nom</label>
            <input type="text" id="firstname" required />
          </div>
          <div class="form-group">
            <label for="lastname">Nom</label>
            <input type="text" id="lastname" required />
          </div>
          <div class="form-group full">
            <label for="address">Adresse</label>
            <input type="text" id="address" required />
          </div>
          <div class="form-group full">
            <label for="address2">Appartement, suite (optionnel)</label>
            <input type="text" id="address2" />
          </div>
          <div class="form-group">
            <label for="postal">Code postal</label>
            <input type="text" id="postal" required />
          </div>
          <div class="form-group">
            <label for="city">Ville</label>
            <input type="text" id="city" required />
          </div>
          <div class="form-group full">
            <label for="phone">T√©l√©phone</label>
            <input type="tel" id="phone" required />
          </div>
          <div class="form-group full">
            <label for="payment">Moyen de paiement</label>
            <select id="payment" required>
              <option value="creditCard">Carte de Cr√©dit</option>
              <option value="paypal">PayPal</option>
            </select>
          </div>
          <button type="submit" class="confirm-button" style="background-color: #ffd6e7; color: black; border: none; padding: 1rem 2rem; border-radius: 1rem; font-size: 1rem; font-weight: bold; cursor: pointer;">üéÄ Confirmer la commande üéÄ</button>
        </form>
      </div>
    </div>
  `;

  // On remplace tout le body par ce r√©cap + formulaire
  document.body.innerHTML = orderSummary;

  // R√©-activation du submit du formulaire
  document.getElementById("orderForm").addEventListener("submit", function (e) {
    e.preventDefault();
    alert("Merci pour votre commande, elle est valid√©e !");
    cart.length = 0;
    renderCart();
  });
});
  </script>
</body>
</html>